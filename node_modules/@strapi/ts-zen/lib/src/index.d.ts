import { RecordTypeDeclaration, SourceOptions } from './source';
import { AssertTypeSelector } from './assert';
import { MatchersObject, MatchersUtils } from './matchers/types';
declare function fromFile(path: string, options?: SourceOptions): AssertTypeSelector;
declare function fromRecord(record: Record<string, RecordTypeDeclaration>, options?: SourceOptions): AssertTypeSelector<object>;
declare function fromRaw(code: string, options?: SourceOptions): AssertTypeSelector<object>;
export type * from './assert';
export type * from './source';
export type * from './load';
export * from './types';
export { default as t } from './types';
export { fromFile, fromRecord, fromRaw };
declare global {
    namespace jest {
        interface Matchers<R> {
            toAssertTypeWith<TMatchers extends MatchersObject, TMatcherName extends keyof TMatchers>(matcherName: TMatcherName, params: Parameters<TMatchers[TMatcherName]>, matchers: TMatchers, matchersUtils: MatchersUtils): void;
        }
    }
}
//# sourceMappingURL=index.d.ts.map