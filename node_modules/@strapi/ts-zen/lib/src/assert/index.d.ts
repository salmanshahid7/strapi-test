import ts from 'typescript';
import { InverseMatchers, Matchers } from '../matchers';
type TestCaseKeys<T extends object = object> = [keyof T] extends [never] ? string : Extract<keyof T, string>;
export type AssertTypeSelector<TNamespace extends object = object> = (typeName: TestCaseKeys<TNamespace>) => Matchers & InverseMatchers;
export declare function createAssertTypeSelector<TNamespace extends object = object>(symbols: Record<string, ts.Symbol>, diagnostics: ts.Diagnostic[], checker: ts.TypeChecker, sourceFile: ts.SourceFile, program: ts.Program): AssertTypeSelector<TNamespace>;
export {};
//# sourceMappingURL=index.d.ts.map