import * as React from 'react';
import { CalendarDateTime } from '@internationalized/date';
import { DatePickerInputProps } from '../DatePicker/DatePicker';
import { FieldProps, FieldLabelProps } from '../Field';
import { TimePickerProps } from '../TimePicker';
export interface DateTimePickerProps extends Omit<DatePickerInputProps, 'step' | 'onChange' | 'error' | 'selectedDate'>, Pick<TimePickerProps, 'step' | 'selectButtonTitle'>, Pick<FieldProps, 'name' | 'hint' | 'error'> {
    /**
     * Label for the DatePicker field
     * @default "Date"
     */
    dateLabel?: string;
    /**
     * Label for the TimePicker field
     * @default "Time"
     */
    timeLabel?: string;
    /**
     * Label used to describe the DateTimePicker fieldset
     */
    label: string;
    /**
     * Label Action
     */
    labelAction?: FieldLabelProps['action'];
    onChange?: (date: Date | undefined) => void;
    /**
     * Value. The Date passed as value
     */
    value?: Date | null;
}
export declare const DateTimePicker: React.ForwardRefExoticComponent<DateTimePickerProps & React.RefAttributes<HTMLInputElement>>;
export declare const convertUTCDateToCalendarDateTime: (date: Date | string, resetTime?: boolean) => CalendarDateTime;
