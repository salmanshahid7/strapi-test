import * as React from 'react';
import { CSSProperties, DefaultTheme } from 'styled-components';
import { TEXT_VARIANTS } from './constants';
import { DefaultThemeOrCSSProp } from '../types';
export type TypographyProps<TElement extends keyof JSX.IntrinsicElements = 'span'> = React.ComponentPropsWithoutRef<TElement> & {
    as?: string | React.ComponentType<any>;
    forwardedAs?: string | React.ComponentType<any>;
    children?: React.ReactNode;
    ellipsis?: boolean;
    fontSize?: keyof DefaultTheme['fontSizes'];
    fontWeight?: keyof DefaultTheme['fontWeights'];
    lineHeight?: DefaultThemeOrCSSProp<'lineHeights', 'lineHeight'>;
    textAlign?: CSSProperties['textAlign'];
    textColor?: keyof DefaultTheme['colors'];
    textDecoration?: CSSProperties['textDecoration'];
    textTransform?: CSSProperties['textTransform'];
    variant?: (typeof TEXT_VARIANTS)[number];
};
export declare const Typography: import("styled-components").StyledComponent<"span", DefaultTheme, TypographyProps<"span">, never>;
