import { ComponentPropsWithoutRef } from 'react';
import * as DropdownMenu from '@radix-ui/react-dropdown-menu';
import { BaseLink } from '../../BaseLink';
import { BoxProps } from '../../Box';
import { ButtonProps } from '../../Button';
import { FlexProps } from '../../Flex';
import { POPOVER_PLACEMENTS } from '../../Popover';
import { TypographyProps } from '../../Typography';
import { LinkProps } from '../Link';
interface RootProps extends DropdownMenu.DropdownMenuProps {
}
interface TriggerProps extends ButtonProps {
}
interface ContentProps extends FlexProps<'div'> {
    intersectionId?: string;
    popoverPlacement?: (typeof POPOVER_PLACEMENTS)[number];
}
interface ItemSharedProps extends Pick<DropdownMenu.MenuItemProps, 'disabled' | 'onSelect'> {
    children?: React.ReactNode;
    isExternal?: boolean;
    isFocused?: boolean;
}
interface ItemExternalLinkProps extends ItemSharedProps, Omit<LinkProps, 'onSelect'> {
    as?: never;
    isLink?: false;
    isExternal?: true;
}
type ItemInternalLinkProps<TComponent extends React.ComponentType = typeof BaseLink> = ItemSharedProps & ComponentPropsWithoutRef<TComponent> & {
    as?: TComponent;
    isLink?: true;
    isExternal?: false;
};
interface ItemButtonProps extends ItemSharedProps, Omit<BoxProps<'button'>, 'onSelect'> {
    as?: never;
    isLink?: false;
    isExternal?: false;
}
type ItemProps<TComponent extends React.ComponentType = typeof BaseLink> = ItemButtonProps | ItemInternalLinkProps<TComponent> | ItemExternalLinkProps;
interface LabelProps extends TypographyProps {
}
interface SubRootProps extends DropdownMenu.DropdownMenuSubProps {
}
interface SubTriggerProps extends BoxProps<'button'> {
}
interface SubContentProps extends FlexProps<'div'> {
}
declare const Root: import("react").FC<DropdownMenu.DropdownMenuProps>;
declare const Trigger: import("react").ForwardRefExoticComponent<TriggerProps & import("react").RefAttributes<HTMLButtonElement>>;
declare const Content: import("react").ForwardRefExoticComponent<ContentProps & import("react").RefAttributes<HTMLDivElement>>;
declare const Item: ({ onSelect, disabled, ...props }: ItemProps) => import("react/jsx-runtime").JSX.Element;
declare const Label: import("react").ForwardRefExoticComponent<LabelProps & import("react").RefAttributes<HTMLSpanElement>>;
declare const SubRoot: import("react").FC<DropdownMenu.DropdownMenuSubProps>;
declare const SubTrigger: import("react").ForwardRefExoticComponent<SubTriggerProps & import("react").RefAttributes<HTMLButtonElement>>;
declare const SubContent: import("react").ForwardRefExoticComponent<SubContentProps & import("react").RefAttributes<HTMLDivElement>>;
export { Root, Trigger, Content, Item, Label, SubRoot, SubTrigger, SubContent };
export type { TriggerProps, ContentProps, ItemProps, RootProps, SubRootProps, SubTriggerProps, SubContentProps, LabelProps, };
