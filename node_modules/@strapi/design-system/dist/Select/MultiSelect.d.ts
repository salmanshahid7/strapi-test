import * as React from 'react';
import * as SelectParts from './SelectParts';
import { FieldLabelProps, FieldProps } from '../Field';
type MultiSelectPropsWithoutLabel = Omit<SelectParts.MultiSelectProps, 'value' | 'multi'> & Pick<SelectParts.ContentProps, 'onCloseAutoFocus'> & Pick<SelectParts.TriggerProps, 'clearLabel' | 'onClear' | 'size' | 'startIcon'> & Pick<SelectParts.ValueProps, 'placeholder'> & Pick<FieldProps, 'hint' | 'id' | 'error'> & {
    /**
     * @default (value) => value.join(',')
     */
    customizeContent?(value?: string[]): string;
    labelAction?: FieldLabelProps['action'];
    onChange?: (value: string[]) => void;
    onReachEnd?: (entry: IntersectionObserverEntry) => void;
    /**
     * @preserve
     * @deprecated This prop is no longer required and will be removed in v2 of the DS.
     * It has no effect on the component.
     */
    selectButtonTitle?: string;
    value?: string[] | null;
    withTags?: boolean;
};
export type MultiSelectProps = (MultiSelectPropsWithoutLabel & {
    label: string;
    'aria-label'?: never;
}) | (MultiSelectPropsWithoutLabel & {
    'aria-label': string;
    label?: never;
});
export declare const MultiSelect: React.ForwardRefExoticComponent<MultiSelectProps & React.RefAttributes<HTMLDivElement>>;
export interface MultiSelectOptionProps extends Omit<SelectParts.ItemProps, 'value'> {
    startIcon?: React.ReactNode;
    value: string | number;
}
export declare const MultiSelectOption: React.ForwardRefExoticComponent<MultiSelectOptionProps & React.RefAttributes<HTMLDivElement>>;
export interface MultiSelectGroupProps extends Pick<MultiSelectOptionProps, 'startIcon'> {
    children: React.ReactNode;
    label: string;
    values?: string[];
}
export declare const MultiSelectGroup: React.ForwardRefExoticComponent<MultiSelectGroupProps & React.RefAttributes<HTMLDivElement>>;
export {};
