import * as React from 'react';
import { type FieldProps, FieldLabelProps } from '../Field';
import type { InputSizes } from '../themes/sizes';
interface ToggleInputInputProps extends Omit<React.ComponentPropsWithoutRef<'input'>, 'name' | 'children' | 'required' | 'id' | 'size' | 'checked'> {
    onLabel: string;
    offLabel: string;
    checked?: boolean | null;
    size?: InputSizes;
}
interface ToggleInputPropsWithoutLabel extends Pick<FieldProps, 'error' | 'hint' | 'name' | 'required' | 'id'>, ToggleInputInputProps {
    clearLabel?: string;
    labelAction?: FieldLabelProps['action'];
    onClear?: () => void;
}
type ToggleInputProps = (ToggleInputPropsWithoutLabel & {
    label: string;
    'aria-label'?: never;
}) | (ToggleInputPropsWithoutLabel & {
    label?: never;
    'aria-label': string;
});
declare const ToggleInput: React.ForwardRefExoticComponent<ToggleInputProps & React.RefAttributes<HTMLInputElement>>;
export { ToggleInput };
export type { ToggleInputProps };
